extends c

snippet cl "class .. (class)"
class ${1:`!p snip.rv = snip.basename or "name"`} {
	public:
		${1/(\w+).*/$1/}($2);
		virtual ~${1/(\w+).*/$1/}();

	private:
		$3
};$0
endsnippet

snippet ns "namespace .. (namespace)"
namespace${1/.+/ /m}${1:`!p snip.rv = snip.basename or "name"`} {
	${VISUAL}$0
}${1/.+/ \/* /m}$1${1/.+/ *\/ /m}
endsnippet

snippet cla "An entire .h generator" b
#ifndef ${2:`!v substitute(vim_snippets#Filename('$1_H','ClassName'),'.*','\U&\E','')`}
#define $2

class ${1:`!v substitute(substitute(vim_snippets#Filename('$1','ClassName'),'^.','\u&',''), '_\(\w\)', '\u\1', 'g')`} {
	public:
		$1();
		virtual ~$1();

	private:
		$3
};

#endif /* $2 */
endsnippet

snippet vector "std::vector (v)"
${3:std::}vector<${1:char}> ${2:v};$0
endsnippet

snippet uns "using namespace std"
using namespace ${1:std};
$0
endsnippet

snippet class "class"
class ${1:Name} {
	public:
		$1();
		virtual ~$1();

	private:
		${0:/* data */}
};
endsnippet

snippet namespace "namespace"
namespace ${1:Name} {
	$0
}
endsnippet
